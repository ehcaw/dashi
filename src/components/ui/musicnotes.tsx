"use client";

import { motion, useCycle } from "framer-motion";
import { useEffect } from "react";

// First vector path
const path1 = "M11.751 0.271729C11.9716 0.232967 12.1985 0.246425 12.4131 0.310791L21.7881 3.12329H21.7871C21.9681 3.17449 22.1374 3.26082 22.2852 3.3772C22.4356 3.49569 22.5606 3.64323 22.6533 3.81079C22.746 3.97833 22.8048 4.16243 22.8252 4.35278C22.8456 4.54315 22.8275 4.73581 22.7725 4.91919C22.7174 5.10267 22.6259 5.27341 22.5039 5.42114C22.382 5.56879 22.2321 5.69073 22.0625 5.77954C21.8928 5.86837 21.7065 5.92272 21.5156 5.93872C21.3248 5.95468 21.1323 5.9326 20.9502 5.87329V5.87231L13.4375 3.61841V18.5618C13.4386 19.9643 12.9586 21.3253 12.0771 22.4163C11.1957 23.5072 9.96614 24.2623 8.59473 24.5559C7.22317 24.8495 5.79186 24.6632 4.54102 24.0286C3.29034 23.3939 2.29474 22.3497 1.72168 21.0696C1.14861 19.7894 1.03276 18.351 1.39258 16.9954C1.75243 15.6398 2.56673 14.4488 3.69922 13.6213C4.83174 12.7939 6.21434 12.3803 7.61523 12.4495C8.66635 12.5015 9.68017 12.8229 10.5625 13.3752V1.68774C10.5626 1.46368 10.6152 1.24243 10.7158 1.04224C10.8165 0.84203 10.9628 0.668145 11.1426 0.534424C11.3223 0.400826 11.5304 0.310513 11.751 0.271729ZM8.55664 15.5598C7.96284 15.3139 7.30909 15.2499 6.67871 15.3752C6.04844 15.5006 5.46912 15.8096 5.01465 16.2639C4.56024 16.7183 4.25046 17.2977 4.125 17.928C3.99962 18.5583 4.06371 19.2121 4.30957 19.8059C4.55556 20.3998 4.97238 20.9078 5.50684 21.2649C6.04129 21.622 6.66972 21.8127 7.3125 21.8127C8.17439 21.8127 9.00087 21.47 9.61035 20.8606C10.2198 20.2512 10.5624 19.4246 10.5625 18.5627C10.5625 17.92 10.3717 17.2915 10.0146 16.7571C9.6576 16.2227 9.15036 15.8058 8.55664 15.5598Z"
// Second vector path (different shape)
const path2 = "M36.1963 18.0381C36.3804 17.992 36.5731 17.9881 36.7588 18.0273C36.8982 18.0568 37.0313 18.1096 37.1523 18.1836L37.2686 18.2637L37.376 18.3574C37.4771 18.4567 37.5605 18.5732 37.623 18.7012C37.7064 18.872 37.75 19.0599 37.75 19.25V32.375C37.7503 33.2387 37.4618 34.0776 36.9307 34.7588C36.3994 35.44 35.6554 35.9246 34.8174 36.1348C33.9795 36.3449 33.0955 36.2688 32.3057 35.9189C31.5158 35.569 30.8654 34.965 30.458 34.2031C30.0507 33.4413 29.9091 32.565 30.0566 31.7139C30.2043 30.8628 30.6325 30.0851 31.2725 29.5049C31.9125 28.9248 32.7284 28.5753 33.5898 28.5117C34.158 28.4698 34.7239 28.5561 35.25 28.7559V20.8516L25.75 23.2266V35.375C25.7503 36.2387 25.4618 37.0776 24.9307 37.7588C24.3994 38.44 23.6554 38.9246 22.8174 39.1348C21.9795 39.3449 21.0955 39.2688 20.3057 38.9189C19.5158 38.569 18.8654 37.965 18.458 37.2031C18.0507 36.4413 17.9091 35.565 18.0566 34.7139C18.2043 33.8628 18.6325 33.0851 19.2725 32.5049C19.9125 31.9248 20.7284 31.5753 21.5898 31.5117C22.158 31.4698 22.7239 31.5561 23.25 31.7559V22.25C23.25 21.9713 23.3431 21.7002 23.5146 21.4805C23.6862 21.2608 23.9269 21.1047 24.1973 21.0371L36.1963 18.0381ZM21.6064 34.0264C21.3398 34.0795 21.0946 34.2101 20.9023 34.4023C20.7101 34.5946 20.5795 34.8398 20.5264 35.1064C20.4733 35.3732 20.5004 35.6501 20.6045 35.9014C20.7086 36.1526 20.8852 36.3675 21.1113 36.5186C21.3374 36.6695 21.6032 36.75 21.875 36.75C22.2397 36.75 22.5898 36.6055 22.8477 36.3477C23.1055 36.0898 23.25 35.7397 23.25 35.375C23.25 35.1032 23.1695 34.8374 23.0186 34.6113C22.8675 34.3852 22.6526 34.2086 22.4014 34.1045C22.1501 34.0004 21.8732 33.9733 21.6064 34.0264ZM33.6064 31.0264C33.3398 31.0795 33.0946 31.2101 32.9023 31.4023C32.7101 31.5946 32.5795 31.8398 32.5264 32.1064C32.4733 32.3732 32.5004 32.6501 32.6045 32.9014C32.7086 33.1526 32.8852 33.3675 33.1113 33.5186C33.3374 33.6695 33.6032 33.75 33.875 33.75C34.2397 33.75 34.5898 33.6055 34.8477 33.3477C35.1055 33.0898 35.25 32.7397 35.25 32.375C35.25 32.1032 35.1695 31.8374 35.0186 31.6113C34.8675 31.3852 34.6526 31.2086 34.4014 31.1045C34.1501 31.0004 33.8732 30.9733 33.6064 31.0264Z"; // Just an example path â€” replace with your real one

// Helper to scale SVG path (basic numeric scaling)
function scalePath(path: string, scale: number): string {
  return path.replace(/([0-9]*\.?[0-9]+)/g, (match: string) => {
    const num = parseFloat(match);
    return isNaN(num) ? match : (num * scale).toFixed(4);
  });
}

export default function TwoDifferentVectors() {
  // Animation state for vector 1
  const [anim1, cycle1] = useCycle(
    { d: path1, fill: "#8CEBE5" },
    { d: scalePath(path1, 1.2), fill: "#D500D8" }
  );

  // Animation state for vector 2
  const [anim2, cycle2] = useCycle(
    { d: scalePath(path2, 1.2), fill: "#D500D8" },
    { d: path2, fill: "#8CEBE5" }
  );

  useEffect(() => {
    const interval = setInterval(() => {
      cycle1();
      cycle2();
    }, 1000);
    return () => clearInterval(interval);
  }, [cycle1, cycle2]);

  return (
    <div
      style={{
        position: "relative",
        width: "100px",
        height: "100px",
        display: "flex",
        alignItems: "center",
        justifyContent: "center"
      }}
    >
      {/* First animated vector */}
      <motion.svg 
        width="100" 
        height="100" 
        viewBox="0 0 25 45"
        style={{
          position: "absolute",
          top: "50%",
          left: "50%",
          transform: "translate(-50%, -50%)"
        }}
      >
        <motion.path
          d={anim1.d}
          fill={anim1.fill}
          animate={{ d: anim1.d, fill: anim1.fill }}
          transition={{ duration: 0.5, ease: "easeInOut" }}
        />
      </motion.svg>

      {/* Second animated vector */}
      <motion.svg 
        width="100" 
        height="100" 
        viewBox="0 0 50 50"
        style={{
          position: "absolute",
          top: "60%",
          left: "70%",
          transform: "translate(-50%, -50%)"
        }}
      >
        <motion.path
          d={anim2.d}
          fill={anim2.fill}
          animate={{ d: anim2.d, fill: anim2.fill }}
          transition={{ duration: 0.5, ease: "easeInOut" }}
        />
      </motion.svg>
    </div>
  );
}
